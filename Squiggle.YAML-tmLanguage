# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Squiggle
scopeName: source.squiggle
fileTypes: [sqg]
uuid: 0997babf-edad-4eb9-914a-a36a76573b98

patterns:
- comment: Comment
  name: comment.line.number-sign
  match: "#.*\n"

- comment: Comment EOF
  name: comment.line.number-sign
  match: "#.*$"

- comment: Number
  name: constant.numeric.squiggle
  match: '\b([0-9][0-9_]*)(\\.([0-9+]))?\b'

- comment: Braces
  name: meta.brace.squiggle
  match: '[\[\](){}]'

- comment: Operator
  name: keyword.operator.squiggle
  match: '(\+\+|~|\+|\.\.|-|\*|/|=>|<=|>=|>|<|==|!=|=)'

- comment: Delimiters
  name: meta.delimiter.squiggle
  match: '(,|:|;|\.)'

- comment: Named Operator
  name: keyword.operator.squiggle
  match: '\b(has|is|not|and|or)\b'

- comment: Boolean
  name: constant.language.boolean.squiggle
  match: '\b(true|false)\b'

- comment: Other Named Constants
  name: constant.language.squiggle
  match: '\b(undefined|null|global)\b'

- comment: Infinity or NaN
  name: constant.numeric.squiggle
  match: '\b(Infinity|NaN)\b'

- comment: Function definition
  match: '(def)\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(\()([a-zA-Z0-9_,@\.\s]*)(\))'
  captures:
    "1": {name: keyword.control.squiggle}
    "2": {name: entity.name.function.squiggle}
    "3": {name: meta.delimiter.squiggle}
    "4": {name: variable.parameter.function.squiggle}
    "5": {name: meta.delimiter.squiggle}

- comment: Anonymous function
  match: '(fn)\s*(\()([a-zA-Z0-9_,@\.\s]*)(\))'
  captures:
    "1": {name: keyword.control.squiggle}
    "2": {name: meta.delimiter.squiggle}
    "3": {name: variable.parameter.function.squiggle}
    "4": {name: meta.delimiter.squiggle}

- comment: Keyword
  name: keyword.control.squiggle
  match: '\b(export|try|throw|error|fn|if|then|elseif|else|match|case|do|end|let|def|in|await|require)\b'

- comment: String
  name: string.quoted.double.squiggle
  begin: '"'
  end: '"'
  patterns:
    - comment: Basic Escaped Character
      name: constant.character.escape.squiggle
      match: '\\[nrt"]'
    - comment: Unicode Escaped Character
      name: constant.character.escape.squiggle
      match: '\\u{[0-9a-fA-F]+}'
    - comment: Character
      match: '[^\\"]'
